#include<iostream>
#include<vector>
#include<list>
#include<map>
using namespace std;

class Librarie {
private:
    string nume;

public:
    Librarie() {
        this->nume = " ";
    }

    Librarie(string nume) {
        this->nume = nume;
    }

    virtual string getdenumire() {
        return nume;
    }
};

class LibrarieOnline : public Librarie {
private:
    string site;

public:
    LibrarieOnline() : Librarie("Librarie Online") {
        this->site = "www.site.ro";
    }

    LibrarieOnline(string nume, string site) : Librarie(nume) {
        this->site = site;
    }

    string getdenumire() override {
        return Librarie::getdenumire() + " - " + site;
    }
};

int main() {
    LibrarieOnline lo("Libris", "libris.ro");
    cout << lo.getdenumire() << endl;

    Librarie* lib = new LibrarieOnline("Humanitas", "humanitas.ro");
    cout << lib->getdenumire() << endl;

    vector<pair<int, int>> v;
    v.push_back({ 1, 2 });
    v.push_back({ 4, 5 });
    v.push_back({ 3, 7 });
    v.push_back({ 5, 9 });

    float s = 0;
    for (int i = 0; i < v.size(); i++) {
        s += v[i].first + v[i].second; 
    }

    if (v.size() > 0)
        cout << "Media este: " << s / v.size() << endl;
    else
        cout << "Media nu poate fi calculata." << endl;

    for (int i = 0; i < v.size(); i++) {
        cout << v[i].first << ", " << v[i].second << endl;
    }

    list<Librarie*> lista;
    lista.push_front(new Librarie());
    lista.push_front(new Librarie("Carturesti"));
    lista.push_front(new LibrarieOnline("Bookzone", "bookzone.ro"));
    lista.push_back(new LibrarieOnline());

    list<Librarie*>::iterator it = lista.begin();
    while (it != lista.end()) {
        cout << (*it)->getdenumire() << endl;
        ++it; 
    }

    map<int, Librarie> librarii;
    librarii.insert(pair<int, Librarie>(1, Librarie()));
    librarii.insert(pair<int, Librarie>(2, Librarie("Carturesti")));
    librarii.insert(pair<int, Librarie>(2, Librarie("Libris")));
    librarii.insert(pair<int, Librarie>(23, Librarie("Humanitas")));
    librarii.insert(pair<int, Librarie>(3, Librarie()));

    cout << librarii[23].getdenumire() << endl;

    map<int, Librarie>::iterator iterator;
    while (iterator != librarii.end())
    {
        cout << iterator->first << " - ";
        cout << iterator->second.getdenumire();
        cout << endl;
        iterator++;
    }

    return 0;
}
